################################################################################
# Docker Compose Drupal 9 CI stack.
#
# This is an helper stack to run tests locally on *unix systems.
#
# Project page:
#   https://gitlab.com/mogtofu33/drupal8ci
# Usage:
#   http://dev-drupal.com/en/node/36
################################################################################
version: '3'

services:
  drupal:
    # Drupal included from official docker image + ci tools. Edit in .env file.
    # see https://gitlab.com/mog33/drupal8ci
    image: mogtofu33/drupal8ci:${CI_IMAGE_REF}-${CI_DRUPAL_VERSION}
    # image: registry.gitlab.com/mog33/drupal8ci/drupal8ci:${CI_IMAGE_REF}-${CI_DRUPAL_VERSION}
    ports:
      - "88:80"
    links:
      - db
      - chrome
    volumes:
      # Mount the parent folder as a module.
      # - ../../:/opt/drupal/web/modules/custom/${CI_PROJECT_NAME}
      # Mount current module in /builds, theme or project, mimic Gitlab-ci.
      - ../../:${CI_PROJECT_DIR}
      # Mount the parent folder as a group of modules or project for local test.
      # - ../../:${CI_DOC_ROOT}
      # [OPTIONAL] composer cache folder to speed up the process.
      - ${HOME}/.cache/composer:/var/www/.composer/cache
    # working_dir: ${CI_DOC_ROOT}
    # Mimic Gitlab-ci.
    working_dir: /builds
    container_name: ci-drupal
    env_file:
      - .env

  db:
    image: ${CI_SERVICE_DATABASE}
    expose:
      - "${CI_SERVICE_DATABASE_PORT}"
    container_name: ci-db
    env_file:
      - .env

  # chrome:
  #   image: ${CI_SERVICE_CHROMEDRIVER}
  #   expose:
  #     - "${CI_SERVICE_CHROMEDRIVER_PORT}"
  #   container_name: ci-chromedriver
  #   env_file:
  #     - .env

  chrome:
    image: ${CI_SERVICE_CHROME}
    expose:
      - "${CI_SERVICE_CHROME_PORT}"
    container_name: ci-chrome
    env_file:
      - .env

  # node:
  #   image: node:alpine
  #   container_name: ci-node
  #   ports:
  #     - 3000
  #   volumes:
  #     - ../:/home/node/app
  #   command: tail -f /dev/null
  #   working_dir: /home/node/app
  #   user: "node"
  #   env_file:
  #     - .env

# volumes:
#   database_data:
